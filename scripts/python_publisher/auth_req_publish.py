import pika
import time

credentials = pika.PlainCredentials('rabbitmq', 'rabbithole')
connectParam = pika.ConnectionParameters(host = 'localhost', port = '5672', virtual_host = '/', credentials = credentials)
connection = pika.BlockingConnection(connectParam)
channel = connection.channel()

channel.exchange_declare(exchange='auth_bus',
                         exchange_type='direct')

channel.queue_bind(exchange='auth_bus',
                   queue='credstoreIn',
                   routing_key='auth_req')

create_message = '{"jobid": "1234", "username": "todd-try", "password": "1234abcd", "handwriting": "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AAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCYHh///0/v7zmcYLFWfcAAAAASUVORK5CYII=", "race": "1234", "action": "create"}'
auth_message = '{"jobid": "1235", "username": "todd-try", "password": "1234abcd", "handwriting": "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AAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCIIBcARBArgAIIFcABJArAALIFQAB5AqAAHIFQAC5AiCAXAEQQK4ACCBXAASQKwACyBUAAeQKgAByBUAAuQIggFwBEECuAAggVwAEkCsAAsgVAAHkCoAAcgVAALkCYHh///0/v7zmcYLFWfcAAAAASUVORK5CYII=", "action": "authenticate"}'
failed_auth_message = '{"jobid": "1236", "username": "todd", "password": "1a2b3c4d", "action": "authenticate"}'
collect_message = '{"jobid": "1237", "username": "todd", "handwriting": "1a2b3c4d", "action": "collectHW"}'
failed_collect_message = '{"jobid": "1238", "username": "ddot", "handwriting": "1a2b3c4d", "action": "collectHW"}'


# this is for creating a record
channel.basic_publish(exchange='auth_bus',
                      routing_key='auth_req',
                      body=create_message)

time.sleep(3)

# this is for a success authenticate
channel.basic_publish(exchange='auth_bus',
                      routing_key='auth_req',
                      body=auth_message)

time.sleep(3)

# this is for a fail authenticate
channel.basic_publish(exchange='auth_bus',
                      routing_key='auth_req',
                      body=failed_auth_message)

time.sleep(3)

# this is for collect handwriting
channel.basic_publish(exchange='auth_bus',
                      routing_key='auth_req',
                      body=collect_message)

time.sleep(3)

# this is for a failure collect handwriting
channel.basic_publish(exchange='auth_bus',
                      routing_key='auth_req',
                      body=failed_collect_message)

channel.close()
connection.close()